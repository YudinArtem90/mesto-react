{"version":3,"sources":["images/pop-up/close_icon.svg","images/logo/mesto-logo.svg","images/element/delete.svg","images/button/pen.svg","components/Header.js","utils/api.js","components/Сard.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","href","src","logo","alt","api","baseUrl","groupId","authorization","this","_baseUrl","_groupId","_data","headers","method","body","contentType","_resetParameters","JSON","stringify","res","ok","json","Promise","reject","status","fetch","then","_getResult","name","link","_getData","cardId","isLike","data","informPerson","namePerson","about","linkCard","avatar","Card","likes","onCardClick","onClick","buttonDelete","type","length","Main","onEditProfile","onAddPlace","onEditAvatar","handleCardClick","React","useState","userName","userDescription","userAvatar","user","getUserData","cards","getCards","useEffect","catch","error","console","log","getUserInfo","_id","pen","map","key","Footer","PopupWithForm","title","children","isOpen","onClose","id","noValidate","closeIcon","ImagePopup","card","PopupDeleteCard","class","PopupElementEditAvatar","placeholder","required","PopupElementEditProfile","minLength","maxLength","pattern","PopupElementAddCard","App","isEditProfilePopupOpen","openEditProfilePopupClick","isAddPlacePopupOpen","openAddPlacePopupClick","isEditAvatarPopupOpen","openEditAvatarPopupClick","isDeleteCardPopupOpen","selectedCard","closeAllPopups","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d0f3dbf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close_icon.c2d0901f.svg\";","module.exports = __webpack_public_path__ + \"static/media/mesto-logo.94cbab21.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.9c3b03ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.58afbe73.svg\";","import React from 'react';\r\nimport logo from '../images/logo/mesto-logo.svg';\r\n\r\nexport default function Header(props){\r\n    return(\r\n        <header className=\"header header-margin\">\r\n            <a href=\"#\" className=\"header__href\">\r\n                <img src={logo} alt=\"Логотип страницы мест в России\" className=\"header__logo\" />\r\n            </a>\r\n        </header>\r\n    );\r\n}\r\n","class Api{\r\n    constructor({baseUrl, groupId, authorization}){\r\n        this._baseUrl= baseUrl;\r\n        this._groupId = groupId;\r\n        this._data = {\r\n            headers: {\r\n                authorization: authorization\r\n            }\r\n        };\r\n    }\r\n\r\n    _getData({method = \"GET\", body, contentType = ''}){\r\n        this._resetParameters();\r\n\r\n        this._data.method = method;\r\n        if(body){\r\n            this._data.body = JSON.stringify(body);\r\n        }\r\n        if(contentType){\r\n            this._data.headers['Content-Type'] = contentType;\r\n        }\r\n    }\r\n\r\n    _resetParameters(){\r\n        delete this._data.method;\r\n        delete this._data.body;\r\n        delete this._data.headers['Content-Type'];\r\n    }\r\n\r\n    _getResult(res){\r\n        return res.ok ?\r\n                res.json() :\r\n                Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n\r\n    getUserInfo(){\r\n        return fetch(`${this._baseUrl}/${this._groupId}/users/me`, this._data)\r\n                    .then(res => { return this._getResult(res) });\r\n    }\r\n\r\n    getCards(){\r\n        return fetch(`${this._baseUrl}/${this._groupId}/cards`, this._data)\r\n                    .then(res => { return this._getResult(res) });\r\n    }\r\n\r\n    addCard(name, link){\r\n\r\n        this._getData({\r\n            method: 'POST',\r\n            body: { \r\n                name: name,\r\n                link: link\r\n            },\r\n            contentType: 'application/json'\r\n        });\r\n\r\n        return fetch(`${this._baseUrl}/${this._groupId}/cards`, this._data)\r\n                .then(res => { return this._getResult(res) });\r\n    }\r\n\r\n    deleteCard(cardId){\r\n        this._getData({\r\n            method: 'DELETE'\r\n        });\r\n\r\n        return fetch(`${this._baseUrl}/${this._groupId}/cards/${cardId}`, this._data)\r\n                .then(res => { return this._getResult(res) });\r\n    }\r\n\r\n    addLikeOrDislikeCard(cardId, isLike){\r\n        this._getData({\r\n            method: isLike ? 'PUT' : 'DELETE'\r\n        });\r\n\r\n        return fetch(`${this._baseUrl}/${this._groupId}/cards/likes/${cardId}`, this._data)\r\n                .then(res => { return this._getResult(res) });\r\n    }\r\n\r\n\r\n    editProfileForm(data){\r\n        const {informPerson, namePerson} = data;\r\n\r\n        this._getData({\r\n            method: 'PATCH',\r\n            body: { \r\n                name: namePerson,\r\n                about: informPerson\r\n            },\r\n            contentType: 'application/json'\r\n        });\r\n\r\n        return fetch(`${this._baseUrl}/${this._groupId}/users/me`, this._data)\r\n                .then(res => { return this._getResult(res) });\r\n    }\r\n\r\n    editAvatar(linkCard){\r\n        this._getData({\r\n            method: 'PATCH',\r\n            body: { avatar: linkCard},\r\n            contentType: 'application/json'\r\n        });\r\n\r\n        return fetch(`${this._baseUrl}/${this._groupId}/users/me/avatar`, this._data)\r\n                    .then(res => { return this._getResult(res) });\r\n    }\r\n}\r\n\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1',\r\n    groupId: 'cohort-12',\r\n    authorization: 'f77ffc2a-fabb-4e1a-b96f-391d240718e4'\r\n  });\r\n\r\nexport default api;","import React from 'react';\r\nimport buttonDelete from '../images/element/delete.svg';\r\n\r\nfunction Card({link, name, likes, onCardClick}){\r\n\r\n    function handleClick() {\r\n        onCardClick(link);\r\n      }\r\n\r\n    return (\r\n        <article className=\"element\">\r\n            <img className=\"element__image\" src={`${link}`} onClick={handleClick}/>\r\n            <img src={buttonDelete} alt=\"Кнопка удаления карточки\" className=\"element__button-delete\" />\r\n            <div className=\"element__container\">\r\n            <p className=\"element__text\">{name}</p>\r\n                <div className=\"element__container_likes\">\r\n                    <button type=\"button\" className=\"element__button-like\" />\r\n                    <p className=\"element__count-like\">{likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport api from '../utils/api';\r\nimport Card from './Сard';\r\nimport pen from '../images/button/pen.svg';\r\n\r\nexport default function Main({onEditProfile, onAddPlace, onEditAvatar, handleCardClick}){\r\n\r\n    const [user, getUserData] = React.useState({\r\n        userName : '', \r\n        userDescription: '', \r\n        userAvatar: ''\r\n    });\r\n\r\n    const [cards, getCards] = React.useState([]);\r\n\r\n    function showCards(){\r\n        api.getCards() \r\n            .then((res) => {\r\n                getCards(res);\r\n            })\r\n            .catch((error) => console.log('Ошибка при первичной загрузке карточек', error));\r\n    }\r\n\r\n    function showUserInfo(){\r\n        api.getUserInfo()\r\n            .then((res) => {\r\n                const {avatar, name, about, _id} = res;\r\n                getUserData({\r\n                    userName : name, \r\n                    userDescription: about, \r\n                    userAvatar: avatar\r\n                });\r\n            })\r\n            .catch((error) => console.log('Ошибка при первичной загрузке данных пользователя', error));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        showCards();\r\n        showUserInfo();\r\n    },[]);\r\n\r\n    const {userName, userAvatar, userDescription} = user;\r\n\r\n    return(\r\n        <main className=\"main\">\r\n            <section className=\"profile\">\r\n            <div className=\"profile__container-avatar\">\r\n                <div className=\"profile__avatar-opacity\" src={`${pen}`} onClick={onEditAvatar}/>\r\n                <img alt=\"Аватарка пользователя\" className=\"profile__avatar\" src={`${userAvatar}`}/>\r\n            </div>\r\n            <div className=\"profile-info\">\r\n                <div className=\"profile-info__container\">\r\n                    <h1 className=\"profile-info__name\">{userName}</h1>\r\n                    <button className=\"profile-info__edit-button\" type=\"button\" onClick={onEditProfile}/>\r\n                </div>\r\n                <p className=\"profile-info__information-person\">{userDescription}</p>\r\n            </div>\r\n            <button className=\"profile__add-button\" type=\"button\" onClick={onAddPlace}/>\r\n            </section>\r\n            <section className=\"elements\">\r\n                {\r\n                    cards && \r\n                    cards.map(({_id, ...props}) => <Card key={_id} {...props} onCardClick={(linkCard) => handleCardClick(linkCard)}/>)\r\n                }\r\n            </section>\r\n      </main>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Footer(props){\r\n    return(\r\n      <footer className=\"footer margin-footer\">\r\n        <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n      </footer>\r\n    );\r\n}","import React from 'react';\r\nimport closeIcon from '../images/pop-up/close_icon.svg';\r\n\r\nfunction PopupWithForm({title, name, children, isOpen, onClose}){\r\n        return(\r\n        <div className={`popup ${isOpen ? 'popup_opened' : ''}`} id={name}>\r\n          <form className=\"popup__container\" method=\"post\" noValidate>\r\n            <img src={closeIcon} alt=\"Кнопка закрытия модального окна\" className=\"popup__icon-close popup__icon-close_form\" onClick={onClose}/>\r\n            <h2 className=\"popup__title\">{title}</h2>\r\n            {children}\r\n            {/* <button className=\"popup__button popup__save_button\" type=\"submit\">Создать</button> */}\r\n          </form>\r\n        </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport closeIcon from '../images/pop-up/close_icon.svg';\r\n\r\nfunction ImagePopup({card , onClose}){\r\n    \r\n    return(\r\n        <div className={`popup ${card ? 'popup_opened' : ''}`}>\r\n            <div className=\"popup__main-container\">\r\n                <div className=\"popup__footer-container\">\r\n                <img className=\"popup__view-photo-container\" src={card}/>\r\n                <img src={closeIcon} alt=\"Кнопка закрытия модального окна\" className=\"popup__icon-close icon-close-form_view-photo\" onClick={onClose}/>\r\n                </div>\r\n                <p className=\"popup__view-photo-info\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport '../index.css';\r\nimport ImagePopup from './ImagePopup';\r\n\r\nfunction PopupDeleteCard(){\r\n  return (\r\n    <>\r\n        <button class=\"popup__button popup__button_delete-card\" type=\"submit\">Да</button>\r\n    </>\r\n);\r\n}\r\n\r\nfunction PopupElementEditAvatar(){\r\n  return (\r\n      <>\r\n          <input id=\"link_avatar\" className=\"popup__field\" type=\"url\" name=\"linkCard\" placeholder=\"Ссылка на картинку\" required />\r\n          <span id=\"link_avatar-error\" className=\"popup__field-error\" />\r\n      </>\r\n  );\r\n}\r\n\r\nfunction PopupElementEditProfile(){\r\n  return (\r\n      <>\r\n          <input id=\"name_person\" className=\"popup__field popup__field_name_person\" type=\"text\" name=\"namePerson\" minLength={2} maxLength={40} pattern=\"^[A-Za-zА-Яа-яЁё\\s\\-]+$\" required />\r\n          <span id=\"name_person-error\" className=\"popup__field-error\" />\r\n          <input id=\"inform_person\" className=\"popup__field popup__field_inform_person\" type=\"text\" name=\"informPerson\" minLength={2} maxLength={200} required />\r\n          <span id=\"inform_person-error\" className=\"popup__field-error\" />\r\n          <button id=\"buttonSavePopupEditProfile\" class=\"popup__button popup__save_button\" type=\"submit\">Сохранить</button>\r\n      </>\r\n  );\r\n}\r\n\r\nfunction PopupElementAddCard(){\r\n  return (\r\n      <>\r\n          <input id=\"name_card\" className=\"popup__field popup__field_name_card\" type=\"text\" minLength={1} maxLength={30} name=\"nameCard\" placeholder=\"Название\" required />\r\n          <span id=\"name_card-error\" className=\"popup__field-error\" />\r\n          <input id=\"link_card\" className=\"popup__field popup__field_link_card\" type=\"url\" name=\"linkCard\" placeholder=\"Ссылка на картинку\" required />\r\n          <span id=\"link_card-error\" className=\"popup__field-error\" />\r\n          <button id=\"buttonSavePopupAddCard\" class=\"popup__button popup__save_button\" type=\"submit\">Создать</button>\r\n      </>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, openEditProfilePopupClick] = React.useState(false);\r\n  const [isAddPlacePopupOpen, openAddPlacePopupClick] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, openEditAvatarPopupClick] = React.useState(false);\r\n  const [isDeleteCardPopupOpen, openDeleteCardPopupClick] = React.useState(false);\r\n  const [selectedCard, handleCardClick] = React.useState('');\r\n\r\n  function handleEditProfileClick(){\r\n    openEditProfilePopupClick(true);\r\n  }\r\n\r\n  function handleEditAvatarClick(){\r\n    openEditAvatarPopupClick(true);\r\n  }\r\n\r\n  function handleAddPlaceClick(){\r\n    openAddPlacePopupClick(true);\r\n  }\r\n\r\n  function closeAllPopups(){\r\n    openEditProfilePopupClick(false);\r\n    openEditAvatarPopupClick(false);\r\n    openAddPlacePopupClick(false);\r\n    handleCardClick('');\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App body\">\r\n      <div className=\"page\">\r\n        <Header/>\r\n        <Main\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          handleCardClick={(linkCard) => handleCardClick(linkCard)}\r\n        />\r\n        <Footer/>\r\n      </div>\r\n\r\n      <PopupWithForm\r\n            children={<PopupElementEditAvatar/>}\r\n            title='Обновить аватар'\r\n            name ='popupEditAvatar'\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n        />\r\n\r\n        <PopupWithForm\r\n            children={<PopupElementEditProfile/>}\r\n            title='Редактировать профиль'\r\n            name ='popupEditProfile'\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n        />\r\n\r\n        <PopupWithForm\r\n            children={<PopupElementAddCard/>}\r\n            title='Новое место'\r\n            name ='popupAddCard'\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n        />\r\n\r\n        <PopupWithForm\r\n            children={<PopupDeleteCard/>}\r\n            title='Вы уверены?'\r\n            name ='popupDeleteCard'\r\n            isOpen={isDeleteCardPopupOpen}\r\n            onClose={closeAllPopups}\r\n        />\r\n\r\n        <ImagePopup\r\n          card={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}